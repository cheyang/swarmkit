// Code generated by protoc-gen-gogo.
// source: customized_resource.proto
// DO NOT EDIT!

package api

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import github_com_docker_swarmkit_api_deepcopy "github.com/docker/swarmkit/api/deepcopy"

import strings "strings"
import reflect "reflect"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Value_Type int32

const (
	Value_SCALAR Value_Type = 0
	Value_RANGES Value_Type = 1
	Value_SET    Value_Type = 2
	Value_TEXT   Value_Type = 3
)

var Value_Type_name = map[int32]string{
	0: "SCALAR",
	1: "RANGES",
	2: "SET",
	3: "TEXT",
}
var Value_Type_value = map[string]int32{
	"SCALAR": 0,
	"RANGES": 1,
	"SET":    2,
	"TEXT":   3,
}

func (x Value_Type) String() string {
	return proto.EnumName(Value_Type_name, int32(x))
}
func (Value_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorCustomizedResource, []int{0, 0}
}

type Value struct {
	Type   Value_Type    `protobuf:"varint,1,opt,name=type,proto3,enum=docker.swarmkit.v1.Value_Type" json:"type,omitempty"`
	Scalar *Value_Scalar `protobuf:"bytes,2,opt,name=scalar" json:"scalar,omitempty"`
	Ranges *Value_Ranges `protobuf:"bytes,3,opt,name=ranges" json:"ranges,omitempty"`
	Set    *Value_Set    `protobuf:"bytes,4,opt,name=set" json:"set,omitempty"`
	Text   *Value_Text   `protobuf:"bytes,5,opt,name=text" json:"text,omitempty"`
}

func (m *Value) Reset()                    { *m = Value{} }
func (*Value) ProtoMessage()               {}
func (*Value) Descriptor() ([]byte, []int) { return fileDescriptorCustomizedResource, []int{0} }

type Value_Scalar struct {
	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Value_Scalar) Reset()      { *m = Value_Scalar{} }
func (*Value_Scalar) ProtoMessage() {}
func (*Value_Scalar) Descriptor() ([]byte, []int) {
	return fileDescriptorCustomizedResource, []int{0, 0}
}

type Value_Range struct {
	Begin uint64 `protobuf:"varint,1,opt,name=begin,proto3" json:"begin,omitempty"`
	End   uint64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (m *Value_Range) Reset()                    { *m = Value_Range{} }
func (*Value_Range) ProtoMessage()               {}
func (*Value_Range) Descriptor() ([]byte, []int) { return fileDescriptorCustomizedResource, []int{0, 1} }

type Value_Ranges struct {
	Range []*Value_Range `protobuf:"bytes,1,rep,name=range" json:"range,omitempty"`
}

func (m *Value_Ranges) Reset()      { *m = Value_Ranges{} }
func (*Value_Ranges) ProtoMessage() {}
func (*Value_Ranges) Descriptor() ([]byte, []int) {
	return fileDescriptorCustomizedResource, []int{0, 2}
}

type Value_Set struct {
	Item []string `protobuf:"bytes,1,rep,name=item" json:"item,omitempty"`
}

func (m *Value_Set) Reset()                    { *m = Value_Set{} }
func (*Value_Set) ProtoMessage()               {}
func (*Value_Set) Descriptor() ([]byte, []int) { return fileDescriptorCustomizedResource, []int{0, 3} }

type Value_Text struct {
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Value_Text) Reset()                    { *m = Value_Text{} }
func (*Value_Text) ProtoMessage()               {}
func (*Value_Text) Descriptor() ([]byte, []int) { return fileDescriptorCustomizedResource, []int{0, 4} }

// *
// Describes a resource on a machine. A resource can take on one of
// three types: scalar (double), a list of finite and discrete ranges
// (e.g., [1-10, 20-30]), or a set of items. A resource is described
// using the standard protocol buffer "union" trick.
type CustomizedResource struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Value.Type type = 2;
	//
	// Types that are valid to be assigned to Value:
	//	*CustomizedResource_Scalar
	//	*CustomizedResource_Ranges
	//	*CustomizedResource_Set
	Value isCustomizedResource_Value `protobuf_oneof:"value"`
}

func (m *CustomizedResource) Reset()      { *m = CustomizedResource{} }
func (*CustomizedResource) ProtoMessage() {}
func (*CustomizedResource) Descriptor() ([]byte, []int) {
	return fileDescriptorCustomizedResource, []int{1}
}

type isCustomizedResource_Value interface {
	isCustomizedResource_Value()
	MarshalTo([]byte) (int, error)
	Size() int
}

type CustomizedResource_Scalar struct {
	Scalar *Value_Scalar `protobuf:"bytes,3,opt,name=scalar,oneof"`
}
type CustomizedResource_Ranges struct {
	Ranges *Value_Ranges `protobuf:"bytes,4,opt,name=ranges,oneof"`
}
type CustomizedResource_Set struct {
	Set *Value_Set `protobuf:"bytes,5,opt,name=set,oneof"`
}

func (*CustomizedResource_Scalar) isCustomizedResource_Value() {}
func (*CustomizedResource_Ranges) isCustomizedResource_Value() {}
func (*CustomizedResource_Set) isCustomizedResource_Value()    {}

func (m *CustomizedResource) GetValue() isCustomizedResource_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *CustomizedResource) GetScalar() *Value_Scalar {
	if x, ok := m.GetValue().(*CustomizedResource_Scalar); ok {
		return x.Scalar
	}
	return nil
}

func (m *CustomizedResource) GetRanges() *Value_Ranges {
	if x, ok := m.GetValue().(*CustomizedResource_Ranges); ok {
		return x.Ranges
	}
	return nil
}

func (m *CustomizedResource) GetSet() *Value_Set {
	if x, ok := m.GetValue().(*CustomizedResource_Set); ok {
		return x.Set
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CustomizedResource) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CustomizedResource_OneofMarshaler, _CustomizedResource_OneofUnmarshaler, _CustomizedResource_OneofSizer, []interface{}{
		(*CustomizedResource_Scalar)(nil),
		(*CustomizedResource_Ranges)(nil),
		(*CustomizedResource_Set)(nil),
	}
}

func _CustomizedResource_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CustomizedResource)
	// value
	switch x := m.Value.(type) {
	case *CustomizedResource_Scalar:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Scalar); err != nil {
			return err
		}
	case *CustomizedResource_Ranges:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ranges); err != nil {
			return err
		}
	case *CustomizedResource_Set:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Set); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CustomizedResource.Value has unexpected type %T", x)
	}
	return nil
}

func _CustomizedResource_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CustomizedResource)
	switch tag {
	case 3: // value.scalar
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Value_Scalar)
		err := b.DecodeMessage(msg)
		m.Value = &CustomizedResource_Scalar{msg}
		return true, err
	case 4: // value.ranges
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Value_Ranges)
		err := b.DecodeMessage(msg)
		m.Value = &CustomizedResource_Ranges{msg}
		return true, err
	case 5: // value.set
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Value_Set)
		err := b.DecodeMessage(msg)
		m.Value = &CustomizedResource_Set{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CustomizedResource_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CustomizedResource)
	// value
	switch x := m.Value.(type) {
	case *CustomizedResource_Scalar:
		s := proto.Size(x.Scalar)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CustomizedResource_Ranges:
		s := proto.Size(x.Ranges)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CustomizedResource_Set:
		s := proto.Size(x.Set)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CustomizedResourceRequirements struct {
	Limits       *CustomizedResource `protobuf:"bytes,1,opt,name=limits" json:"limits,omitempty"`
	Reservations *CustomizedResource `protobuf:"bytes,2,opt,name=reservations" json:"reservations,omitempty"`
}

func (m *CustomizedResourceRequirements) Reset()      { *m = CustomizedResourceRequirements{} }
func (*CustomizedResourceRequirements) ProtoMessage() {}
func (*CustomizedResourceRequirements) Descriptor() ([]byte, []int) {
	return fileDescriptorCustomizedResource, []int{2}
}

func init() {
	proto.RegisterType((*Value)(nil), "docker.swarmkit.v1.Value")
	proto.RegisterType((*Value_Scalar)(nil), "docker.swarmkit.v1.Value.Scalar")
	proto.RegisterType((*Value_Range)(nil), "docker.swarmkit.v1.Value.Range")
	proto.RegisterType((*Value_Ranges)(nil), "docker.swarmkit.v1.Value.Ranges")
	proto.RegisterType((*Value_Set)(nil), "docker.swarmkit.v1.Value.Set")
	proto.RegisterType((*Value_Text)(nil), "docker.swarmkit.v1.Value.Text")
	proto.RegisterType((*CustomizedResource)(nil), "docker.swarmkit.v1.CustomizedResource")
	proto.RegisterType((*CustomizedResourceRequirements)(nil), "docker.swarmkit.v1.CustomizedResourceRequirements")
	proto.RegisterEnum("docker.swarmkit.v1.Value_Type", Value_Type_name, Value_Type_value)
}

func (m *Value) Copy() *Value {
	if m == nil {
		return nil
	}
	o := &Value{}
	o.CopyFrom(m)
	return o
}

func (m *Value) CopyFrom(src interface{}) {

	o := src.(*Value)
	*m = *o
	if o.Scalar != nil {
		m.Scalar = &Value_Scalar{}
		github_com_docker_swarmkit_api_deepcopy.Copy(m.Scalar, o.Scalar)
	}
	if o.Ranges != nil {
		m.Ranges = &Value_Ranges{}
		github_com_docker_swarmkit_api_deepcopy.Copy(m.Ranges, o.Ranges)
	}
	if o.Set != nil {
		m.Set = &Value_Set{}
		github_com_docker_swarmkit_api_deepcopy.Copy(m.Set, o.Set)
	}
	if o.Text != nil {
		m.Text = &Value_Text{}
		github_com_docker_swarmkit_api_deepcopy.Copy(m.Text, o.Text)
	}
}

func (m *Value_Scalar) Copy() *Value_Scalar {
	if m == nil {
		return nil
	}
	o := &Value_Scalar{}
	o.CopyFrom(m)
	return o
}

func (m *Value_Scalar) CopyFrom(src interface{}) {

	o := src.(*Value_Scalar)
	*m = *o
}

func (m *Value_Range) Copy() *Value_Range {
	if m == nil {
		return nil
	}
	o := &Value_Range{}
	o.CopyFrom(m)
	return o
}

func (m *Value_Range) CopyFrom(src interface{}) {

	o := src.(*Value_Range)
	*m = *o
}

func (m *Value_Ranges) Copy() *Value_Ranges {
	if m == nil {
		return nil
	}
	o := &Value_Ranges{}
	o.CopyFrom(m)
	return o
}

func (m *Value_Ranges) CopyFrom(src interface{}) {

	o := src.(*Value_Ranges)
	*m = *o
	if o.Range != nil {
		m.Range = make([]*Value_Range, len(o.Range))
		for i := range m.Range {
			m.Range[i] = &Value_Range{}
			github_com_docker_swarmkit_api_deepcopy.Copy(m.Range[i], o.Range[i])
		}
	}

}

func (m *Value_Set) Copy() *Value_Set {
	if m == nil {
		return nil
	}
	o := &Value_Set{}
	o.CopyFrom(m)
	return o
}

func (m *Value_Set) CopyFrom(src interface{}) {

	o := src.(*Value_Set)
	*m = *o
	if o.Item != nil {
		m.Item = make([]string, len(o.Item))
		copy(m.Item, o.Item)
	}

}

func (m *Value_Text) Copy() *Value_Text {
	if m == nil {
		return nil
	}
	o := &Value_Text{}
	o.CopyFrom(m)
	return o
}

func (m *Value_Text) CopyFrom(src interface{}) {

	o := src.(*Value_Text)
	*m = *o
}

func (m *CustomizedResource) Copy() *CustomizedResource {
	if m == nil {
		return nil
	}
	o := &CustomizedResource{}
	o.CopyFrom(m)
	return o
}

func (m *CustomizedResource) CopyFrom(src interface{}) {

	o := src.(*CustomizedResource)
	*m = *o
	if o.Value != nil {
		switch o.Value.(type) {
		case *CustomizedResource_Scalar:
			v := CustomizedResource_Scalar{
				Scalar: &Value_Scalar{},
			}
			github_com_docker_swarmkit_api_deepcopy.Copy(v.Scalar, o.GetScalar())
			m.Value = &v
		case *CustomizedResource_Ranges:
			v := CustomizedResource_Ranges{
				Ranges: &Value_Ranges{},
			}
			github_com_docker_swarmkit_api_deepcopy.Copy(v.Ranges, o.GetRanges())
			m.Value = &v
		case *CustomizedResource_Set:
			v := CustomizedResource_Set{
				Set: &Value_Set{},
			}
			github_com_docker_swarmkit_api_deepcopy.Copy(v.Set, o.GetSet())
			m.Value = &v
		}
	}

}

func (m *CustomizedResourceRequirements) Copy() *CustomizedResourceRequirements {
	if m == nil {
		return nil
	}
	o := &CustomizedResourceRequirements{}
	o.CopyFrom(m)
	return o
}

func (m *CustomizedResourceRequirements) CopyFrom(src interface{}) {

	o := src.(*CustomizedResourceRequirements)
	*m = *o
	if o.Limits != nil {
		m.Limits = &CustomizedResource{}
		github_com_docker_swarmkit_api_deepcopy.Copy(m.Limits, o.Limits)
	}
	if o.Reservations != nil {
		m.Reservations = &CustomizedResource{}
		github_com_docker_swarmkit_api_deepcopy.Copy(m.Reservations, o.Reservations)
	}
}

func (m *Value) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Value) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Type != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCustomizedResource(dAtA, i, uint64(m.Type))
	}
	if m.Scalar != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCustomizedResource(dAtA, i, uint64(m.Scalar.Size()))
		n1, err := m.Scalar.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.Ranges != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintCustomizedResource(dAtA, i, uint64(m.Ranges.Size()))
		n2, err := m.Ranges.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.Set != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintCustomizedResource(dAtA, i, uint64(m.Set.Size()))
		n3, err := m.Set.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.Text != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintCustomizedResource(dAtA, i, uint64(m.Text.Size()))
		n4, err := m.Text.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	return i, nil
}

func (m *Value_Scalar) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Value_Scalar) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Value != 0 {
		dAtA[i] = 0x9
		i++
		i = encodeFixed64CustomizedResource(dAtA, i, uint64(math.Float64bits(float64(m.Value))))
	}
	return i, nil
}

func (m *Value_Range) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Value_Range) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Begin != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCustomizedResource(dAtA, i, uint64(m.Begin))
	}
	if m.End != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintCustomizedResource(dAtA, i, uint64(m.End))
	}
	return i, nil
}

func (m *Value_Ranges) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Value_Ranges) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Range) > 0 {
		for _, msg := range m.Range {
			dAtA[i] = 0xa
			i++
			i = encodeVarintCustomizedResource(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *Value_Set) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Value_Set) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Item) > 0 {
		for _, s := range m.Item {
			dAtA[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	return i, nil
}

func (m *Value_Text) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Value_Text) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Value) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintCustomizedResource(dAtA, i, uint64(len(m.Value)))
		i += copy(dAtA[i:], m.Value)
	}
	return i, nil
}

func (m *CustomizedResource) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CustomizedResource) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintCustomizedResource(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.Value != nil {
		nn5, err := m.Value.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn5
	}
	return i, nil
}

func (m *CustomizedResource_Scalar) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.Scalar != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintCustomizedResource(dAtA, i, uint64(m.Scalar.Size()))
		n6, err := m.Scalar.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	return i, nil
}
func (m *CustomizedResource_Ranges) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.Ranges != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintCustomizedResource(dAtA, i, uint64(m.Ranges.Size()))
		n7, err := m.Ranges.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	return i, nil
}
func (m *CustomizedResource_Set) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.Set != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintCustomizedResource(dAtA, i, uint64(m.Set.Size()))
		n8, err := m.Set.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n8
	}
	return i, nil
}
func (m *CustomizedResourceRequirements) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CustomizedResourceRequirements) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Limits != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintCustomizedResource(dAtA, i, uint64(m.Limits.Size()))
		n9, err := m.Limits.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n9
	}
	if m.Reservations != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCustomizedResource(dAtA, i, uint64(m.Reservations.Size()))
		n10, err := m.Reservations.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n10
	}
	return i, nil
}

func encodeFixed64CustomizedResource(dAtA []byte, offset int, v uint64) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	dAtA[offset+4] = uint8(v >> 32)
	dAtA[offset+5] = uint8(v >> 40)
	dAtA[offset+6] = uint8(v >> 48)
	dAtA[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32CustomizedResource(dAtA []byte, offset int, v uint32) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintCustomizedResource(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}

func (m *Value) Size() (n int) {
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovCustomizedResource(uint64(m.Type))
	}
	if m.Scalar != nil {
		l = m.Scalar.Size()
		n += 1 + l + sovCustomizedResource(uint64(l))
	}
	if m.Ranges != nil {
		l = m.Ranges.Size()
		n += 1 + l + sovCustomizedResource(uint64(l))
	}
	if m.Set != nil {
		l = m.Set.Size()
		n += 1 + l + sovCustomizedResource(uint64(l))
	}
	if m.Text != nil {
		l = m.Text.Size()
		n += 1 + l + sovCustomizedResource(uint64(l))
	}
	return n
}

func (m *Value_Scalar) Size() (n int) {
	var l int
	_ = l
	if m.Value != 0 {
		n += 9
	}
	return n
}

func (m *Value_Range) Size() (n int) {
	var l int
	_ = l
	if m.Begin != 0 {
		n += 1 + sovCustomizedResource(uint64(m.Begin))
	}
	if m.End != 0 {
		n += 1 + sovCustomizedResource(uint64(m.End))
	}
	return n
}

func (m *Value_Ranges) Size() (n int) {
	var l int
	_ = l
	if len(m.Range) > 0 {
		for _, e := range m.Range {
			l = e.Size()
			n += 1 + l + sovCustomizedResource(uint64(l))
		}
	}
	return n
}

func (m *Value_Set) Size() (n int) {
	var l int
	_ = l
	if len(m.Item) > 0 {
		for _, s := range m.Item {
			l = len(s)
			n += 1 + l + sovCustomizedResource(uint64(l))
		}
	}
	return n
}

func (m *Value_Text) Size() (n int) {
	var l int
	_ = l
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovCustomizedResource(uint64(l))
	}
	return n
}

func (m *CustomizedResource) Size() (n int) {
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovCustomizedResource(uint64(l))
	}
	if m.Value != nil {
		n += m.Value.Size()
	}
	return n
}

func (m *CustomizedResource_Scalar) Size() (n int) {
	var l int
	_ = l
	if m.Scalar != nil {
		l = m.Scalar.Size()
		n += 1 + l + sovCustomizedResource(uint64(l))
	}
	return n
}
func (m *CustomizedResource_Ranges) Size() (n int) {
	var l int
	_ = l
	if m.Ranges != nil {
		l = m.Ranges.Size()
		n += 1 + l + sovCustomizedResource(uint64(l))
	}
	return n
}
func (m *CustomizedResource_Set) Size() (n int) {
	var l int
	_ = l
	if m.Set != nil {
		l = m.Set.Size()
		n += 1 + l + sovCustomizedResource(uint64(l))
	}
	return n
}
func (m *CustomizedResourceRequirements) Size() (n int) {
	var l int
	_ = l
	if m.Limits != nil {
		l = m.Limits.Size()
		n += 1 + l + sovCustomizedResource(uint64(l))
	}
	if m.Reservations != nil {
		l = m.Reservations.Size()
		n += 1 + l + sovCustomizedResource(uint64(l))
	}
	return n
}

func sovCustomizedResource(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozCustomizedResource(x uint64) (n int) {
	return sovCustomizedResource(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *Value) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Value{`,
		`Type:` + fmt.Sprintf("%v", this.Type) + `,`,
		`Scalar:` + strings.Replace(fmt.Sprintf("%v", this.Scalar), "Value_Scalar", "Value_Scalar", 1) + `,`,
		`Ranges:` + strings.Replace(fmt.Sprintf("%v", this.Ranges), "Value_Ranges", "Value_Ranges", 1) + `,`,
		`Set:` + strings.Replace(fmt.Sprintf("%v", this.Set), "Value_Set", "Value_Set", 1) + `,`,
		`Text:` + strings.Replace(fmt.Sprintf("%v", this.Text), "Value_Text", "Value_Text", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Value_Scalar) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Value_Scalar{`,
		`Value:` + fmt.Sprintf("%v", this.Value) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Value_Range) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Value_Range{`,
		`Begin:` + fmt.Sprintf("%v", this.Begin) + `,`,
		`End:` + fmt.Sprintf("%v", this.End) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Value_Ranges) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Value_Ranges{`,
		`Range:` + strings.Replace(fmt.Sprintf("%v", this.Range), "Value_Range", "Value_Range", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Value_Set) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Value_Set{`,
		`Item:` + fmt.Sprintf("%v", this.Item) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Value_Text) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Value_Text{`,
		`Value:` + fmt.Sprintf("%v", this.Value) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CustomizedResource) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CustomizedResource{`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`Value:` + fmt.Sprintf("%v", this.Value) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CustomizedResource_Scalar) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CustomizedResource_Scalar{`,
		`Scalar:` + strings.Replace(fmt.Sprintf("%v", this.Scalar), "Value_Scalar", "Value_Scalar", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CustomizedResource_Ranges) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CustomizedResource_Ranges{`,
		`Ranges:` + strings.Replace(fmt.Sprintf("%v", this.Ranges), "Value_Ranges", "Value_Ranges", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CustomizedResource_Set) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CustomizedResource_Set{`,
		`Set:` + strings.Replace(fmt.Sprintf("%v", this.Set), "Value_Set", "Value_Set", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CustomizedResourceRequirements) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CustomizedResourceRequirements{`,
		`Limits:` + strings.Replace(fmt.Sprintf("%v", this.Limits), "CustomizedResource", "CustomizedResource", 1) + `,`,
		`Reservations:` + strings.Replace(fmt.Sprintf("%v", this.Reservations), "CustomizedResource", "CustomizedResource", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringCustomizedResource(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *Value) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomizedResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Value: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Value: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomizedResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= (Value_Type(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scalar", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomizedResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Scalar == nil {
				m.Scalar = &Value_Scalar{}
			}
			if err := m.Scalar.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ranges", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomizedResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ranges == nil {
				m.Ranges = &Value_Ranges{}
			}
			if err := m.Ranges.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Set", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomizedResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Set == nil {
				m.Set = &Value_Set{}
			}
			if err := m.Set.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomizedResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Text == nil {
				m.Text = &Value_Text{}
			}
			if err := m.Text.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomizedResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Value_Scalar) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomizedResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Scalar: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Scalar: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += 8
			v = uint64(dAtA[iNdEx-8])
			v |= uint64(dAtA[iNdEx-7]) << 8
			v |= uint64(dAtA[iNdEx-6]) << 16
			v |= uint64(dAtA[iNdEx-5]) << 24
			v |= uint64(dAtA[iNdEx-4]) << 32
			v |= uint64(dAtA[iNdEx-3]) << 40
			v |= uint64(dAtA[iNdEx-2]) << 48
			v |= uint64(dAtA[iNdEx-1]) << 56
			m.Value = float64(math.Float64frombits(v))
		default:
			iNdEx = preIndex
			skippy, err := skipCustomizedResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Value_Range) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomizedResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Range: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Range: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Begin", wireType)
			}
			m.Begin = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomizedResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Begin |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field End", wireType)
			}
			m.End = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomizedResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.End |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCustomizedResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Value_Ranges) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomizedResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Ranges: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Ranges: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Range", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomizedResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Range = append(m.Range, &Value_Range{})
			if err := m.Range[len(m.Range)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomizedResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Value_Set) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomizedResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Set: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Set: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Item", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomizedResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Item = append(m.Item, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomizedResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Value_Text) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomizedResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Text: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Text: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomizedResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomizedResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CustomizedResource) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomizedResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CustomizedResource: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CustomizedResource: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomizedResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scalar", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomizedResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Value_Scalar{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Value = &CustomizedResource_Scalar{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ranges", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomizedResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Value_Ranges{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Value = &CustomizedResource_Ranges{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Set", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomizedResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Value_Set{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Value = &CustomizedResource_Set{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomizedResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CustomizedResourceRequirements) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomizedResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CustomizedResourceRequirements: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CustomizedResourceRequirements: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limits", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomizedResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Limits == nil {
				m.Limits = &CustomizedResource{}
			}
			if err := m.Limits.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reservations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomizedResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reservations == nil {
				m.Reservations = &CustomizedResource{}
			}
			if err := m.Reservations.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomizedResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomizedResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCustomizedResource(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCustomizedResource
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCustomizedResource
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCustomizedResource
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthCustomizedResource
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowCustomizedResource
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipCustomizedResource(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthCustomizedResource = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCustomizedResource   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("customized_resource.proto", fileDescriptorCustomizedResource) }

var fileDescriptorCustomizedResource = []byte{
	// 492 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x93, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0xb3, 0xf5, 0xda, 0xa5, 0x13, 0x84, 0xac, 0x55, 0x0f, 0xae, 0x05, 0x26, 0xca, 0x01,
	0xe5, 0xe4, 0x28, 0x46, 0x48, 0xa8, 0x07, 0x50, 0x5a, 0x45, 0x54, 0x08, 0x71, 0x58, 0x47, 0x88,
	0x1b, 0x72, 0x93, 0x51, 0x64, 0x35, 0xb6, 0xc3, 0xee, 0x26, 0xb4, 0x9c, 0x78, 0x06, 0x9e, 0x83,
	0x07, 0xe9, 0x91, 0x23, 0x07, 0x0e, 0x34, 0x4f, 0x82, 0x76, 0x6c, 0x22, 0x55, 0x2d, 0x6d, 0x6e,
	0x63, 0xcd, 0xff, 0xcf, 0xce, 0xbf, 0xfe, 0x16, 0x0e, 0x26, 0x4b, 0x6d, 0xaa, 0x22, 0xff, 0x8a,
	0xd3, 0x4f, 0x0a, 0x75, 0xb5, 0x54, 0x13, 0x8c, 0x17, 0xaa, 0x32, 0x95, 0x10, 0xd3, 0x6a, 0x72,
	0x86, 0x2a, 0xd6, 0x5f, 0x32, 0x55, 0x9c, 0xe5, 0x26, 0x5e, 0x0d, 0xc2, 0xfd, 0x59, 0x35, 0xab,
	0xa8, 0xdd, 0xb7, 0x55, 0xad, 0xec, 0x7e, 0xe7, 0xe0, 0x7e, 0xc8, 0xe6, 0x4b, 0x14, 0x09, 0x70,
	0x73, 0xb1, 0xc0, 0x80, 0x75, 0x58, 0xef, 0x51, 0x12, 0xc5, 0x37, 0x47, 0xc4, 0x24, 0x8c, 0xc7,
	0x17, 0x0b, 0x94, 0xa4, 0x15, 0x2f, 0xc1, 0xd3, 0x93, 0x6c, 0x9e, 0xa9, 0x60, 0xa7, 0xc3, 0x7a,
	0xed, 0xa4, 0xf3, 0x7f, 0x57, 0x4a, 0x3a, 0xd9, 0xe8, 0xad, 0x53, 0x65, 0xe5, 0x0c, 0x75, 0xe0,
	0xdc, 0xe7, 0x94, 0xa4, 0x93, 0x8d, 0x5e, 0xf4, 0xc1, 0xd1, 0x68, 0x02, 0x4e, 0xb6, 0x27, 0x77,
	0x1c, 0x88, 0x46, 0x5a, 0x25, 0x05, 0xc3, 0x73, 0x13, 0xb8, 0xe4, 0xb8, 0x2b, 0x18, 0x9e, 0x1b,
	0x49, 0xda, 0x30, 0x02, 0xaf, 0x5e, 0x58, 0xec, 0x83, 0xbb, 0xb2, 0x5d, 0xba, 0x17, 0x26, 0xeb,
	0x8f, 0xb0, 0x0f, 0x2e, 0xad, 0x65, 0xdb, 0xa7, 0x38, 0xcb, 0x4b, 0x6a, 0x73, 0x59, 0x7f, 0x08,
	0x1f, 0x1c, 0x2c, 0xa7, 0x74, 0x29, 0x5c, 0xda, 0x32, 0x7c, 0x0d, 0x5e, 0x9d, 0x43, 0xbc, 0x00,
	0x97, 0x92, 0x04, 0xac, 0xe3, 0xf4, 0xda, 0xc9, 0xd3, 0x7b, 0x82, 0xcb, 0x5a, 0x1d, 0x1e, 0x80,
	0x93, 0xa2, 0x11, 0x02, 0x78, 0x6e, 0xb0, 0x20, 0xf3, 0x9e, 0xa4, 0x3a, 0x7c, 0x0c, 0xdc, 0xae,
	0x7e, 0x7d, 0xd5, 0xbd, 0x66, 0xd5, 0xee, 0x00, 0xb8, 0xfd, 0x63, 0x02, 0xc0, 0x4b, 0x8f, 0x87,
	0xef, 0x86, 0xd2, 0x6f, 0xd9, 0x5a, 0x0e, 0xdf, 0xbf, 0x19, 0xa5, 0x3e, 0x13, 0xbb, 0xe0, 0xa4,
	0xa3, 0xb1, 0xbf, 0x23, 0x1e, 0x00, 0x1f, 0x8f, 0x3e, 0x8e, 0x7d, 0xa7, 0xfb, 0x9b, 0x81, 0x38,
	0xde, 0xc0, 0x25, 0x1b, 0xb6, 0xec, 0xd9, 0x65, 0x56, 0xfc, 0x1b, 0x4f, 0xb5, 0x38, 0xdc, 0x10,
	0xe0, 0x6c, 0x47, 0xc0, 0x49, 0x6b, 0xc3, 0xc0, 0xe1, 0x86, 0x01, 0xbe, 0x1d, 0x03, 0xd6, 0xdb,
	0x50, 0x30, 0xa8, 0x29, 0x70, 0xb7, 0xa0, 0xe0, 0xa4, 0x45, 0x1c, 0x1c, 0xed, 0x36, 0xd7, 0xd3,
	0xfd, 0xc1, 0x20, 0xba, 0x19, 0x4f, 0xe2, 0xe7, 0x65, 0xae, 0xb0, 0xc0, 0xd2, 0x68, 0xf1, 0x0a,
	0xbc, 0x79, 0x5e, 0xe4, 0x46, 0x53, 0xd8, 0x76, 0xf2, 0xec, 0xb6, 0x13, 0x6e, 0x99, 0xd1, 0xb8,
	0xc4, 0x5b, 0x78, 0xa8, 0x50, 0xa3, 0x5a, 0x65, 0x26, 0xaf, 0x4a, 0xdd, 0x3c, 0x8f, 0x6d, 0xa7,
	0x5c, 0xf3, 0x1e, 0x05, 0x97, 0x57, 0x51, 0xeb, 0xd7, 0x55, 0xd4, 0xfa, 0xb6, 0x8e, 0xd8, 0xe5,
	0x3a, 0x62, 0x3f, 0xd7, 0x11, 0xfb, 0xb3, 0x8e, 0xd8, 0xa9, 0x47, 0x6f, 0xf8, 0xf9, 0xdf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x01, 0x8a, 0x5b, 0xe9, 0x0a, 0x04, 0x00, 0x00,
}
